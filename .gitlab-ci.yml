stages:
  - test
  - generate_docs
  - build
  - versions
  - upload

program64:
  interruptible: true
  tags:
    - windows
    - windows10
  stage: build
  variables:
    PYTHON: "C:\\python310\\python.exe"
  before_script:
    - Set-Variable -Name "time" -Value (date -Format "%H:%m")
    - echo ${time}
    - echo "started by ${GITLAB_USER_NAME}"
    - '&$env:PYTHON -V'
    - '&$env:PYTHON -m pip install --upgrade pip'
    - '&$env:PYTHON -m venv env'
    - 'env\Scripts\Activate.ps1'
    - 'python -m pip install --upgrade -r requirements.txt'
  script:
    - cd src
    - 'python write_version_data.py'
    - 'python setup.py build'
    - cd ..
    - 'mkdir build'
    - cd scripts
    - 'python prepare_zipversion.py'
    - cd ..
    - move src\music_dl.zip build\music_dl_x64.zip
    - 'move src/dist build/program64'
    - 'move src/installer.nsi build'
  only:
    - schedules
    - master
  artifacts:
    paths:
      - build
    expire_in: 1 day

program32:
  interruptible: true
  tags:
    - windows
    - windows10
  stage: build
  variables:
    PYTHON: "C:\\python310-32\\python.exe"
  before_script:
    - Set-Variable -Name "time" -Value (date -Format "%H:%m")
    - echo ${time}
    - echo "started by ${GITLAB_USER_NAME}"
    - '&$env:PYTHON -V'
    - '&$env:PYTHON -m pip install --upgrade pip'
    - '&$env:PYTHON -m venv env'
    - 'env\Scripts\Activate.ps1'
    - 'python -m pip install https://github.com/josephsl/wxpy32whl/raw/main/wxPython-4.2.0-cp310-cp310-win32.whl'
    - 'python -m pip install --upgrade -r requirements.txt'
  script:
    - cd src
    - 'python write_version_data.py'
    - 'python setup.py build'
    - cd ..
    - 'mkdir build'
    - cd scripts
    - 'python prepare_zipversion.py'
    - cd ..
    - move src\music_dl.zip build\music_dl_x86.zip
    - 'move src/dist build/program32'
  only:
    - schedules
    - master
  artifacts:
    paths:
      - build
    expire_in: 1 day

generate_versions:
  stage: versions
  tags:
    - windows
    - windows10
  variables:
    NSIS: "C:\\program files (x86)\\nsis\\makensis.exe"
  before_script:
    - Set-Variable -Name "time" -Value (date -Format "%H:%m")
    - echo ${time}
    - echo "started by ${GITLAB_USER_NAME}"
  script:
    - mkdir artifacts
    - 'cd build'
    - '&$env:NSIS installer.nsi'
    - move *.exe ../artifacts
    - move *.zip ../artifacts
  only:
    - tags
    - master
    - schedules
  artifacts:
    paths:
      - artifacts
    expire_in: 1 day

upload:
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  tags:
    - docker
  only:
    - tags
    - master
  interruptible: true
  stage: upload
  script:
    - aws --version
    - aws --endpoint-url https://s3.us-west-001.backblazeb2.com s3 cp artifacts s3://$S3_BUCKET/music_dl/ --recursive